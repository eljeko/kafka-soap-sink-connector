---
version: '2'

services:

  broker:
    image: confluentinc/cp-kafka:${CONFLUENT_VERSION}
    hostname: broker
    container_name: broker
    ports:
      - "9092:9092"
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: 'broker,controller'
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@broker:29093'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT'
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://broker:9092'
      KAFKA_LISTENERS: 'PLAINTEXT://broker:9092,CONTROLLER://broker:29093'
      KAFKA_INTER_BROKER_LISTENER_NAME: 'PLAINTEXT'
      KAFKA_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
      KAFKA_LOG_DIRS: '/tmp/kraft-combined-logs'
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TOOLS_LOG4J_LOGLEVEL: ERROR
      CLUSTER_ID: 'QTnB2tAgTWa1ec5wYon2jg'

  schema-registry:
    image: confluentinc/cp-schema-registry:${CONFLUENT_VERSION}
    hostname: schema-registry
    container_name: schema-registry
    depends_on:
      - broker
    ports:
      - "8081:8081"
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: 'broker:9092'

  connect:
    image: confluentinc/cp-kafka-connect:${CONFLUENT_VERSION}
    hostname: connect
    container_name: connect
    depends_on:
      - schema-registry
    ports:
      - "8083:8083"
    environment:
      CONNECT_BOOTSTRAP_SERVERS: 'broker:9092'      
      CONNECT_REST_ADVERTISED_HOST_NAME: connect      
      CONNECT_REST_PORT: 8083
      CONNECT_GROUP_ID: compose-connect-group
      CONNECT_CONFIG_STORAGE_TOPIC: docker-connect-configs
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_OFFSET_FLUSH_INTERVAL_MS: 10000
      CONNECT_OFFSET_STORAGE_TOPIC: docker-connect-offsets
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_STATUS_STORAGE_TOPIC: docker-connect-status
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_KEY_CONVERTER: org.apache.kafka.connect.storage.StringConverter
      CONNECT_VALUE_CONVERTER: io.confluent.connect.avro.AvroConverter
      CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: http://schema-registry:8081
      CONNECT_PLUGIN_PATH:  /usr/share/java,/usr/share/confluent-hub-components,/etc/kafka-connect/plugins
      CONNECT_LOG4J_LOGGERS: org.apache.zookeeper=ERROR,org.I0Itec.zkclient=ERROR,org.reflections=ERROR
    volumes:
      - ../target/components/packages/org-kafka-connect-soap-sink-0.1.zip:/home/org-kafka-connect-soap-sink-0.1.zip
      - ./soap-xslt/transform.xslt:/home/transform.xslt
    command:
      - bash
      - -c
      - |
        echo "Installing Connector"
        confluent-hub install --no-prompt /home/org-kafka-connect-soap-sink-0.1.zip
        #
        echo "Launching Kafka Connect worker"
        /etc/confluent/docker/run &
        #
        sleep infinity

  control-center:
      image: confluentinc/cp-enterprise-control-center:${CONFLUENT_VERSION}
      hostname: control-center
      container_name: control-center
      depends_on:
        - broker
        - schema-registry
        - connect
      ports:
        - "9021:9021"
      environment:
        CONTROL_CENTER_BOOTSTRAP_SERVERS: 'broker:9092'
        CONTROL_CENTER_CONNECT_CONNECT-DEFAULT_CLUSTER: 'http://connect:8083'
        CONTROL_CENTER_CONNECT_HEALTHCHECK_ENDPOINT: '/connectors'
        CONTROL_CENTER_KSQL_KSQLDB1_ADVERTISED_URL: "http://localhost:8088"
        CONTROL_CENTER_SCHEMA_REGISTRY_URL: "http://schema-registry:8081"
        CONTROL_CENTER_REPLICATION_FACTOR: 1
        CONTROL_CENTER_INTERNAL_TOPICS_PARTITIONS: 1
        CONTROL_CENTER_MONITORING_INTERCEPTOR_TOPIC_PARTITIONS: 1
        CONFLUENT_METRICS_TOPIC_REPLICATION: 1
        PORT: 9021

  acme-soap-service:
    image: acme/acme-service:1.0
    container_name: acme-soap-service
    ports:
      - "8080:8080"

###############################
# Datagen  JR container       #
############################### 

  jr-cli:
      image: ugol/jr
      container_name: jr-cli
      entrypoint: /bin/sh
      tty: true
      volumes:
          - ./templates/event_template.tpl:/home/jr/.jr/templates/event_template.tpl
          - ./templates/insert_orders.tpl:/home/jr/.jr/templates/insert_orders.tpl